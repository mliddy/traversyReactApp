{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","name","onClick","className","style","backgroundColor","Header","title","onAdd","showAddTask","defaultProps","Task","task","deleteTask","toggleReminder","reminder","onDoubleClick","id","text","cursor","console","log","day","Tasks","tasks","map","AddTask","onAddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","currentTarget","checked","App","setShowAddTask","setTasks","newTasks","Math","max","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b33475c7.chunk.js","sourcesContent":["export default function Button({color,name,onClick}){\r\n\r\n    return(\r\n        <button onClick = {onClick} className = 'btn' style = {{backgroundColor:color}}>{name}</button>\r\n    )\r\n}","import {Component} from 'react';\r\nimport Button from './Button'\r\nexport default function Header({title,onAdd,showAddTask}){\r\n\r\n\r\n    return(\r\n            <header className = 'header'>\r\n                <h1>{title}</h1>\r\n               <Button onClick = {onAdd} color= {showAddTask ? 'red':'green'} name= {showAddTask ? 'Close':'Add'}/> \r\n              \r\n            </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title:'Task Tracker'\r\n}\r\n\r\n","import {FaTimes} from 'react-icons/fa'\r\nimport '../index.css'\r\n\r\nexport default function Task({ task,deleteTask,toggleReminder }) {\r\n\r\n    const handleDelete = () =>{\r\n        console.log(\"Trying to handle delete\")\r\n        deleteTask(task.id);\r\n    }\r\n\r\n    return (\r\n        <div className = {`${task.reminder ? 'task-reminder': 'task' }`}\r\n        onDoubleClick = {()=>toggleReminder(task.id)} >\r\n            <h3>  {task.text} <FaTimes style = {{color:'red', cursor:'pointer'}}\r\n             onClick = {handleDelete}/></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n\r\n    )\r\n\r\n}","import Task from './Task'\r\n\r\nexport default function Tasks({tasks,deleteTask,toggleReminder}){\r\n    \r\n        \r\n    return(\r\n        <div>\r\n            {tasks.map(task => <Task key = {task.id} task = {task} \r\n            deleteTask = {deleteTask} toggleReminder = {toggleReminder}/>)}\r\n        </div>\r\n    )\r\n\r\n}","import {useState} from 'react' \r\n\r\nexport default function AddTask({onAddTask}){\r\n\r\nconst[text,setText] = useState('')\r\nconst[day,setDay] = useState('')\r\nconst[reminder,setReminder] = useState(false)\r\n\r\nconst onSubmit = (e) =>{\r\n    e.preventDefault();\r\n\r\n    if(!text){\r\n        alert(\"Please add task\");\r\n        return;\r\n    }\r\n    onAddTask({text,day,reminder})\r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n\r\n}\r\n\r\n    return(\r\n       <form className = 'add-form' onSubmit = {onSubmit}>\r\n           <div className= 'form-control'>\r\n                <label>Task</label>\r\n                <input type = 'text' placeholder = 'Add Task' \r\n                value = {text} onChange = {(e) => setText(e.target.value)}/>\r\n           </div>\r\n           <div className= 'form-control'>\r\n                <label>Date and Time</label>\r\n                <input type = 'text' placeholder = 'Add Date & Time'\r\n                value = {day} onChange={(e) => setDay(e.target.value)}/>\r\n           </div>\r\n           <div className= 'form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type = 'checkbox' value = {reminder}\r\n                 onChange= {(e) => setReminder(e.currentTarget.checked)} />\r\n           </div>\r\n        <input className = 'btn btn-block' type = 'submit' value = 'Save Task'/>\r\n       </form>\r\n    )\r\n}","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport {useState,useEffect} from 'react';\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const[showAddTask,setShowAddTask] = useState(false);\n\n  const [tasks,setTasks] = useState([\n    {\n        id:1,\n        text:'Dentist',\n        day:'Monday',\n        reminder:true\n    },\n    {\n        id:2,\n        text:'Doctor',\n        day:'Tuesday',\n        reminder:false\n    },\n    {\n        id:3,\n        text:'Massage',\n        day:'Wednesday',\n        reminder:true\n    }\n    ])\n\n    const onAddTask = (task) => {\n      const newTasks = [...tasks];\n      var id = Math.max(...newTasks.map(task => task.id)) + 1\n      const newTask = {id,...task}\n      setTasks([...newTasks,newTask])\n      }\n       \n\n    const deleteTask = (id)=>{\n      setTasks(tasks.filter(task => task.id != id))\n    }\n\n    const toggleReminder = (id) =>{\n        // Long but easy ot understand\n      // const newTasks = [...tasks];\n      // const task = newTasks.find(task => task.id===id)\n      // task.reminder = !task.reminder;\n      // setTasks(newTasks);\n\n        // Short, but harder to understand..\n        // If task.id === id, then we will return a specific object {}\n        // If not, then we jsut return the task, unchanged\n        // line 44 says \"Take the task, copy(spread), but change the reminder\"\n        // to whatever the opposite of task.reminder is\n        setTasks(tasks.map(task => task.id === id ? \n          {...task,reminder:!task.reminder}\n          :task))\n    }\n\n    const onAdd = () =>{\n      console.log(showAddTask)\n        setShowAddTask(!showAddTask)\n    }\n\n  return (\n    <div className='container'>\n    <Header onAdd = {onAdd} showAddTask = {showAddTask}/>\n    {showAddTask && <AddTask onAddTask = {onAddTask}/>}\n    {tasks.length === 0 ? 'Nothing to see here' :\n    <Tasks tasks = {tasks} deleteTask = {deleteTask} toggleReminder = {toggleReminder}/>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}